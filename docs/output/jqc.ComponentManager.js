Ext.data.JsonP.jqc_ComponentManager({"tagname":"class","name":"jqc.ComponentManager","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-jqc.ComponentManager","members":{"cfg":[],"property":[{"name":"componentClasses","tagname":"property","owner":"jqc.ComponentManager","meta":{"private":true},"id":"property-componentClasses"}],"method":[{"name":"create","tagname":"method","owner":"jqc.ComponentManager","meta":{},"id":"method-create"},{"name":"getType","tagname":"method","owner":"jqc.ComponentManager","meta":{},"id":"method-getType"},{"name":"hasType","tagname":"method","owner":"jqc.ComponentManager","meta":{},"id":"method-hasType"},{"name":"registerType","tagname":"method","owner":"jqc.ComponentManager","meta":{},"id":"method-registerType"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":6,"files":[{"filename":"ComponentManager.js","href":"ComponentManager.html#jqc-ComponentManager"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ComponentManager.html#jqc-ComponentManager' target='_blank'>ComponentManager.js</a></div></pre><div class='doc-contents'><p>Object used to manage <a href=\"#!/api/jqc.Component\" rel=\"jqc.Component\" class=\"docClass\">jqc.Component</a> \"types\", and handles instantiating them based on the string that is specified\nfor them in the manifest.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-componentClasses' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.ComponentManager'>jqc.ComponentManager</span><br/><a href='source/ComponentManager.html#jqc-ComponentManager-property-componentClasses' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.ComponentManager-property-componentClasses' class='name expandable'>componentClasses</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>An Object (map) of the jqc.Component classes which have been registered,\nkeyed by their type name. ...</div><div class='long'><p>An Object (map) of the <a href=\"#!/api/jqc.Component\" rel=\"jqc.Component\" class=\"docClass\">jqc.Component</a> classes which have been <a href=\"#!/api/jqc.ComponentManager-method-registerType\" rel=\"jqc.ComponentManager-method-registerType\" class=\"docClass\">registered</a>,\nkeyed by their type name.</p>\n<p>Defaults to: <code>{}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-create' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.ComponentManager'>jqc.ComponentManager</span><br/><a href='source/ComponentManager.html#jqc-ComponentManager-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.ComponentManager-method-create' class='name expandable'>create</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/jqc.Component\" rel=\"jqc.Component\" class=\"docClass\">jqc.Component</a></div><div class='description'><div class='short'>Creates (instantiates) a Component based on its type name, given\na configuration object that has a type property. ...</div><div class='long'><p>Creates (instantiates) a <a href=\"#!/api/jqc.Component\" rel=\"jqc.Component\" class=\"docClass\">Component</a> based on its type name, given\na configuration object that has a <code>type</code> property. If an already-instantiated\n<a href=\"#!/api/jqc.Component\" rel=\"jqc.Component\" class=\"docClass\">Component</a> is provided, it will simply be returned unchanged.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>The configuration object for the Component. Config objects should have the property <code>type</code>,\n  which determines which type of <a href=\"#!/api/jqc.Component\" rel=\"jqc.Component\" class=\"docClass\">Component</a> will be instantiated. If the object does not\n  have a <code>type</code> property, it will default to \"container\", which makes it simple to create things like tab containers.\n  Note that already-instantiated <a href=\"#!/api/jqc.Component\" rel=\"jqc.Component\" class=\"docClass\">Components</a> will simply be returned unchanged.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jqc.Component\" rel=\"jqc.Component\" class=\"docClass\">jqc.Component</a></span><div class='sub-desc'><p>The instantiated Component.</p>\n</div></li></ul></div></div></div><div id='method-getType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.ComponentManager'>jqc.ComponentManager</span><br/><a href='source/ComponentManager.html#jqc-ComponentManager-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.ComponentManager-method-getType' class='name expandable'>getType</a>( <span class='pre'>type</span> ) : Function</div><div class='description'><div class='short'>Retrieves the Component class (constructor function) that has been registered by the supplied type name. ...</div><div class='long'><p>Retrieves the Component class (constructor function) that has been registered by the supplied <code>type</code> name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type name of the registered class.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>The class (constructor function) that has been registered under the given type name.</p>\n</div></li></ul></div></div></div><div id='method-hasType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.ComponentManager'>jqc.ComponentManager</span><br/><a href='source/ComponentManager.html#jqc-ComponentManager-method-hasType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.ComponentManager-method-hasType' class='name expandable'>hasType</a>( <span class='pre'>type</span> ) : Boolean</div><div class='description'><div class='short'>Determines if the ComponentManager has (i.e. ...</div><div class='long'><p>Determines if the ComponentManager has (i.e. can instantiate) a given <code>type</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the ComponentManager has the given type.</p>\n</div></li></ul></div></div></div><div id='method-registerType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.ComponentManager'>jqc.ComponentManager</span><br/><a href='source/ComponentManager.html#jqc-ComponentManager-method-registerType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.ComponentManager-method-registerType' class='name expandable'>registerType</a>( <span class='pre'>type, jsClass</span> )</div><div class='description'><div class='short'>Registers a given class with a type name. ...</div><div class='long'><p>Registers a given class with a <code>type</code> name. This is used to map the type names specified in Bit manifests\nto the class that should be instantiated.  Note that type names are case-insensitive.</p>\n\n<p>This method will throw an error if a type name is already registered, to assist in making sure that we don't get\nunexpected behavior from a type name being overwritten.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type name of registered class.</p>\n</div></li><li><span class='pre'>jsClass</span> : Function<div class='sub-desc'><p>The class (constructor function) to register.</p>\n</div></li></ul></div></div></div></div></div></div></div>"});