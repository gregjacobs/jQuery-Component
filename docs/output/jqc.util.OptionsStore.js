Ext.data.JsonP.jqc_util_OptionsStore({"tagname":"class","name":"jqc.util.OptionsStore","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-jqc.util.OptionsStore","members":{"cfg":[],"property":[{"name":"options","tagname":"property","owner":"jqc.util.OptionsStore","meta":{"private":true},"id":"property-options"}],"method":[{"name":"constructor","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-constructor"},{"name":"addOption","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-addOption"},{"name":"getAtIndex","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-getAtIndex"},{"name":"getByText","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-getByText"},{"name":"getByValue","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-getByValue"},{"name":"getCount","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-getCount"},{"name":"getOptions","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-getOptions"},{"name":"normalizeOption","tagname":"method","owner":"jqc.util.OptionsStore","meta":{"private":true},"id":"method-normalizeOption"},{"name":"normalizeOptions","tagname":"method","owner":"jqc.util.OptionsStore","meta":{"private":true},"id":"method-normalizeOptions"},{"name":"removeOptionByText","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-removeOptionByText"},{"name":"removeOptionByValue","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-removeOptionByValue"},{"name":"setOptions","tagname":"method","owner":"jqc.util.OptionsStore","meta":{},"id":"method-setOptions"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":8,"files":[{"filename":"OptionsStore.js","href":"OptionsStore.html#jqc-util-OptionsStore"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OptionsStore.html#jqc-util-OptionsStore' target='_blank'>OptionsStore.js</a></div></pre><div class='doc-contents'><p>Helper utility class used for making the management of 'options' data easy, for any classes that use this format of data.\n\"Options data\" in this context simply means \"text/value\" pairs, such as used by dropdowns. The purpose of this class\nwas to not duplicate functionality for classes that use this format of data.</p>\n\n<p>This class is currently used by <a href=\"#!/api/jqc.form.field.Dropdown\" rel=\"jqc.form.field.Dropdown\" class=\"docClass\">jqc.form.field.Dropdown</a> and <a href=\"#!/api/jqc.form.field.Radio\" rel=\"jqc.form.field.Radio\" class=\"docClass\">jqc.form.field.Radio</a>, which use it for\nmanaging the options that they provide.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-options' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-property-options' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-property-options' class='name not-expandable'>options</a><span> : Object[]</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'><p>The internal array of options held by the OptionsStore.</p>\n</div><div class='long'><p>The internal array of options held by the OptionsStore.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/jqc.util.OptionsStore-method-constructor' class='name expandable'>jqc.util.OptionsStore</a>( <span class='pre'>options</span> ) : <a href=\"#!/api/jqc.util.OptionsStore\" rel=\"jqc.util.OptionsStore\" class=\"docClass\">jqc.util.OptionsStore</a></div><div class='description'><div class='short'>Instantiates an OptionsStore. ...</div><div class='long'><p>Instantiates an OptionsStore.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Array/Function<div class='sub-desc'><p>The initial set of options to provide to the OptionsStore.\n  See the <code>options</code> parameter in <a href=\"#!/api/jqc.util.OptionsStore-method-setOptions\" rel=\"jqc.util.OptionsStore-method-setOptions\" class=\"docClass\">setOptions</a> for accepted formats of this parameter.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jqc.util.OptionsStore\" rel=\"jqc.util.OptionsStore\" class=\"docClass\">jqc.util.OptionsStore</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addOption' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-addOption' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-addOption' class='name expandable'>addOption</a>( <span class='pre'>A, [index]</span> )</div><div class='description'><div class='short'>Adds an option to the OptionsStore. ...</div><div class='long'><p>Adds an option to the OptionsStore.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>A</span> : String/Object<div class='sub-desc'><p>string, which will be used for both the text/value, or an object with <code>text</code> and <code>value</code> properties.</p>\n</div></li><li><span class='pre'>index</span> : Number (optional)<div class='sub-desc'><p>The index to add the option at. Defaults to appending the option.</p>\n</div></li></ul></div></div></div><div id='method-getAtIndex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-getAtIndex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-getAtIndex' class='name expandable'>getAtIndex</a>( <span class='pre'>index</span> ) : Object</div><div class='description'><div class='short'>Retrieves an option based on its index position (0-based). ...</div><div class='long'><p>Retrieves an option based on its index position (0-based).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The option object with properties 'text' and 'value', or null if the index was out of range.</p>\n</div></li></ul></div></div></div><div id='method-getByText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-getByText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-getByText' class='name expandable'>getByText</a>( <span class='pre'>text</span> ) : Object</div><div class='description'><div class='short'>Retrieves an option based on its text. ...</div><div class='long'><p>Retrieves an option based on its <code>text</code>. An option object has properties 'text' and 'value'.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The option object with properties 'text' and 'value', or null if no option was found.</p>\n</div></li></ul></div></div></div><div id='method-getByValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-getByValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-getByValue' class='name expandable'>getByValue</a>( <span class='pre'>value</span> ) : Object</div><div class='description'><div class='short'>Retrieves an option based on its value. ...</div><div class='long'><p>Retrieves an option based on its <code>value</code>. An option object has properties 'text' and 'value'.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The option object with properties 'text' and 'value', or null if no option was found.</p>\n</div></li></ul></div></div></div><div id='method-getCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-getCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-getCount' class='name expandable'>getCount</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Retrieves the number of options held by the OptionsStore. ...</div><div class='long'><p>Retrieves the number of options held by the OptionsStore.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of options currently held by the OptionsStore.</p>\n</div></li></ul></div></div></div><div id='method-getOptions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-getOptions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-getOptions' class='name expandable'>getOptions</a>( <span class='pre'></span> ) : Object[]</div><div class='description'><div class='short'>Retrives all of the options objects held by the OptionsStore. ...</div><div class='long'><p>Retrives all of the options objects held by the OptionsStore. Each options object has properties: 'text' and 'value'.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object[]</span><div class='sub-desc'><p>An array of the options objects, each of which has properties 'text' and 'value'.</p>\n</div></li></ul></div></div></div><div id='method-normalizeOption' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-normalizeOption' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-normalizeOption' class='name expandable'>normalizeOption</a>( <span class='pre'>option</span> ) : Object<strong class='private signature' >private</strong></div><div class='description'><div class='short'>Normalizes a single option into an object with text and value properties. ...</div><div class='long'><p>Normalizes a single option into an object with <code>text</code> and <code>value</code> properties. If a string is provided as the argument,\nthat string will be used as both the <code>text</code> and <code>value</code> properties. If an object is provided, it must at least have a\n<code>text</code> property, which will also be used for the <code>value</code> property should no <code>value</code> of its own exist.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>option</span> : String/Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A normalized object with <code>text</code> and <code>value</code> properties.</p>\n</div></li></ul></div></div></div><div id='method-normalizeOptions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-normalizeOptions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-normalizeOptions' class='name expandable'>normalizeOptions</a>( <span class='pre'>options</span> ) : Object[]<strong class='private signature' >private</strong></div><div class='description'><div class='short'>Normalizes the given array of options into text/value options. ...</div><div class='long'><p>Normalizes the given array of options into text/value options.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object[]<div class='sub-desc'><p>See the <code>options</code> argument of <a href=\"#!/api/jqc.util.OptionsStore-method-setOptions\" rel=\"jqc.util.OptionsStore-method-setOptions\" class=\"docClass\">setOptions</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object[]</span><div class='sub-desc'><p>The options normalized to objects with 'text' and 'value' properties.</p>\n</div></li></ul></div></div></div><div id='method-removeOptionByText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-removeOptionByText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-removeOptionByText' class='name expandable'>removeOptionByText</a>( <span class='pre'>text</span> )</div><div class='description'><div class='short'>Removes an option from the OptionsStore by its text. ...</div><div class='long'><p>Removes an option from the OptionsStore by its text.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Mixed<div class='sub-desc'><p>The text of the option to remove.</p>\n</div></li></ul></div></div></div><div id='method-removeOptionByValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-removeOptionByValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-removeOptionByValue' class='name expandable'>removeOptionByValue</a>( <span class='pre'>value</span> )</div><div class='description'><div class='short'>Removes an option from the OptionsStore by its value. ...</div><div class='long'><p>Removes an option from the OptionsStore by its value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value of the option to remove.</p>\n</div></li></ul></div></div></div><div id='method-setOptions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqc.util.OptionsStore'>jqc.util.OptionsStore</span><br/><a href='source/OptionsStore.html#jqc-util-OptionsStore-method-setOptions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqc.util.OptionsStore-method-setOptions' class='name expandable'>setOptions</a>( <span class='pre'>options</span> )</div><div class='description'><div class='short'>Sets the options for the store. ...</div><div class='long'><p>Sets the options for the store. Normalizes the options into an array of objects, where each object\nhas the properties 'text' and 'value'.  Extra properties may be added however, when following the recommended format (an\narray of objects).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Array/Function<div class='sub-desc'><p>The options for the OptionsStore. If this is a flat array, the values will be used as both the 'value' and 'text'\n  of the options.  Ex: <code>[ \"Option 1\", \"Option 2\", \"Option 3\" ]</code></p>\n\n<p>  If you want to customize the value and text separately for each option (recommended), provide an array of objects, where the object has two\n  properties: <code>text</code> and <code>value</code>.\n  Ex: <code>[ { \"text\": \"Option 1\", \"value\": 1 }, { \"text\": \"Option 2\", \"value\": 2 } ]</code></p>\n\n<p>  Extra properties may also be added if needed in this form, and will not be affected by the OptionsStore.  These properties\n  may be used by whichever implementation is using the OptionsStore.\n  Ex: <code>[ { \"text\": \"Option 1\", \"value\": 1, \"cls\" : \"myCssClass\" }, { \"text\": \"Option 2\", \"value\": 2, \"cls\" : \"myCssClass2\" } ]</code></p>\n\n<p>  If this config is specified as a function, the function will be executed, and its return will be used as the options. Its return should match one of\n  the forms defined above.</p>\n</div></li></ul></div></div></div></div></div></div></div>"});