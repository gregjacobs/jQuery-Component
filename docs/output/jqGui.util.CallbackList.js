Ext.data.JsonP.jqGui_util_CallbackList({"tagname":"class","name":"jqGui.util.CallbackList","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-jqGui.util.CallbackList","members":{"cfg":[],"property":[{"name":"callbacks","tagname":"property","owner":"jqGui.util.CallbackList","meta":{"protected":true},"id":"property-callbacks"}],"method":[{"name":"constructor","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-constructor"},{"name":"add","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-add"},{"name":"applyAll","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-applyAll"},{"name":"callAll","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-callAll"},{"name":"contains","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-contains"},{"name":"getAll","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-getAll"},{"name":"indexOf","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-indexOf"},{"name":"remove","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-remove"},{"name":"removeAll","tagname":"method","owner":"jqGui.util.CallbackList","meta":{},"id":"method-removeAll"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":7,"files":[{"filename":"CallbackList.js","href":"CallbackList.html#jqGui-util-CallbackList"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/CallbackList.html#jqGui-util-CallbackList' target='_blank'>CallbackList.js</a></div></pre><div class='doc-contents'><p>Simple utility used to maintain a list of callback functions, and their associated scope objects.</p>\n\n<p>This utility ensures that a given callback is not added more than once, and provides convenient methods\nto call all of the callbacks in the list in their own scopes.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-callbacks' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-property-callbacks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-property-callbacks' class='name expandable'>callbacks</a><span> : Object[]</span><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>An array of objects which stores the callbacks. ...</div><div class='long'><p>An array of objects which stores the callbacks. Each object has properties <code>callback</code> and <code>scope</code>.</p>\n\n<p>To give a visual example:</p>\n\n<pre><code>callbacks : [\n    { callback: function(){}, scope: obj },\n    { callback: function(){}, scope: obj2 }\n]\n</code></pre>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/jqGui.util.CallbackList-method-constructor' class='name expandable'>jqGui.util.CallbackList</a>( <span class='pre'></span> ) : <a href=\"#!/api/jqGui.util.CallbackList\" rel=\"jqGui.util.CallbackList\" class=\"docClass\">jqGui.util.CallbackList</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jqGui.util.CallbackList\" rel=\"jqGui.util.CallbackList\" class=\"docClass\">jqGui.util.CallbackList</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-add' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-method-add' class='name expandable'>add</a>( <span class='pre'>callback, [scope]</span> )</div><div class='description'><div class='short'>Adds a callback to the CallbackList, with an optional scope. ...</div><div class='long'><p>Adds a <code>callback</code> to the CallbackList, with an optional <code>scope</code>.</p>\n\n<p>If the <code>callback</code> function is already in the CallbackList with the given <code>scope</code>, it will not be added\nagain to prevent inefficiencies by accidentally adding a callback more than once.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback function to add.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope to call the callback in.</p>\n</div></li></ul></div></div></div><div id='method-applyAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-applyAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-method-applyAll' class='name expandable'>applyAll</a>( <span class='pre'>args</span> )</div><div class='description'><div class='short'>Calls each of the callbacks in the CallBackList, in the scope that they were added in, applying\nthe array of argument...</div><div class='long'><p>Calls each of the callbacks in the CallBackList, in the scope that they were <a href=\"#!/api/jqGui.util.CallbackList-method-add\" rel=\"jqGui.util.CallbackList-method-add\" class=\"docClass\">added</a> in, applying\nthe array of arguments that is provided to this method.</p>\n\n<p>Example:</p>\n\n<pre><code>callbackList.applyAll( [ 1, 2, 3 ] );  // each callback is called with the arguments: 1, 2, 3\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Mixed[]<div class='sub-desc'><p>The array of arguments which will be applied to each callback function.</p>\n</div></li></ul></div></div></div><div id='method-callAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-callAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-method-callAll' class='name expandable'>callAll</a>( <span class='pre'>args</span> )</div><div class='description'><div class='short'>Calls each of the callbacks in the CallBackList, in the scope that they were added in. ...</div><div class='long'><p>Calls each of the callbacks in the CallBackList, in the scope that they were <a href=\"#!/api/jqGui.util.CallbackList-method-add\" rel=\"jqGui.util.CallbackList-method-add\" class=\"docClass\">added</a> in.\nThe arguments provided to this method will be provided to each callback function when they are called.</p>\n\n<p>Example:</p>\n\n<pre><code>callbackList.callAll( 1, 2, 3 );  // each callback is called with the arguments: 1, 2, 3\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Mixed...<div class='sub-desc'><p>The arguments to provide to each callback function. Each argument provided to this\n  method will be provided to each callback.</p>\n</div></li></ul></div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-method-contains' class='name expandable'>contains</a>( <span class='pre'>callback, [scope]</span> )</div><div class='description'><div class='short'>Determines if the CallbackList holds a given callback/scope pair. ...</div><div class='long'><p>Determines if the CallbackList holds a given <code>callback</code>/<code>scope</code> pair. The <code>scope</code> parameter may be omitted if\nthe <code>callback</code> was not <a href=\"#!/api/jqGui.util.CallbackList-method-add\" rel=\"jqGui.util.CallbackList-method-add\" class=\"docClass\">added</a> with a <code>scope</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback function to check for.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope that the callback was <a href=\"#!/api/jqGui.util.CallbackList-method-add\" rel=\"jqGui.util.CallbackList-method-add\" class=\"docClass\">added</a> with.</p>\n</div></li></ul></div></div></div><div id='method-getAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-getAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-method-getAll' class='name expandable'>getAll</a>( <span class='pre'></span> ) : Object[]</div><div class='description'><div class='short'>Retrieves all of the callbacks in the CallbackList. ...</div><div class='long'><p>Retrieves all of the callbacks in the CallbackList. This method returns an array of objects, where each object\nhas properties <code>callback</code> and <code>scope</code>.</p>\n\n<p>This method is useful if you want to implement some other scheme than simply calling all of the callbacks using\n<a href=\"#!/api/jqGui.util.CallbackList-method-callAll\" rel=\"jqGui.util.CallbackList-method-callAll\" class=\"docClass\">callAll</a> or <a href=\"#!/api/jqGui.util.CallbackList-method-applyAll\" rel=\"jqGui.util.CallbackList-method-applyAll\" class=\"docClass\">applyAll</a>, such as if a return value of <code>false</code> from one of them should stop the others\nfrom being called.</p>\n\n<p>Example return from this method:</p>\n\n<pre><code>[\n    { callback: function(){}, scope: obj },\n    { callback: function(){}, scope: obj2 }\n]\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object[]</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-indexOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-indexOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-method-indexOf' class='name expandable'>indexOf</a>( <span class='pre'>callback, [scope]</span> )</div><div class='description'><div class='short'>Determines the index that a given callback/scope pair exists within the CallbackList. ...</div><div class='long'><p>Determines the index that a given <code>callback</code>/<code>scope</code> pair exists within the CallbackList. Returns -1 if the\ncallback/scope is not found.</p>\n\n<p>The <code>scope</code> parameter may be omitted if the <code>callback</code> was not <a href=\"#!/api/jqGui.util.CallbackList-method-add\" rel=\"jqGui.util.CallbackList-method-add\" class=\"docClass\">added</a> with a <code>scope</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback function to check for.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope that the callback was <a href=\"#!/api/jqGui.util.CallbackList-method-add\" rel=\"jqGui.util.CallbackList-method-add\" class=\"docClass\">added</a> with.</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-method-remove' class='name expandable'>remove</a>( <span class='pre'>callback, [scope]</span> )</div><div class='description'><div class='short'>Removes a callback from the CallbackList. ...</div><div class='long'><p>Removes a <code>callback</code> from the CallbackList. The <code>scope</code> parameter, if provided, must match the <code>scope</code> that the\ncallback was <a href=\"#!/api/jqGui.util.CallbackList-method-add\" rel=\"jqGui.util.CallbackList-method-add\" class=\"docClass\">added</a> with. If the callback was added without a <code>scope</code>, then <code>scope</code> must be omitted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback function to remove.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope that the callback was <a href=\"#!/api/jqGui.util.CallbackList-method-add\" rel=\"jqGui.util.CallbackList-method-add\" class=\"docClass\">added</a> with.</p>\n</div></li></ul></div></div></div><div id='method-removeAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jqGui.util.CallbackList'>jqGui.util.CallbackList</span><br/><a href='source/CallbackList.html#jqGui-util-CallbackList-method-removeAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jqGui.util.CallbackList-method-removeAll' class='name expandable'>removeAll</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Removes all callbacks from the CallbackList, resetting it to its empty state. ...</div><div class='long'><p>Removes all callbacks from the CallbackList, resetting it to its empty state.</p>\n</div></div></div></div></div></div></div>"});